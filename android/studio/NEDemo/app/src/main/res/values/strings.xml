<resources>
    <string name="app_name">NEDemo</string>
    <string name="register_signal">注册信号</string>
    <string name="kill_self">kill自杀</string>
    <string name="null_pointer_crash">空指针异常</string>
    <string name="null_pointer">空指针异常</string>

    <string name="function_nullptr">function_nullptr</string>
    <string name="smash_stack">smash-stack</string>
    <string name="smash_stack_desc">overwrite a -fstack-protector guard</string>
    <string name="stack_overflow">stack-overflow</string>
    <string name="stack_overflow_desc">recurse until the stack overflows</string>
    <string name="nostack">nostack</string>
    <string name="nostack_desc">crash with a NULL stack pointer</string>
    <string name="heap_usage">heap-usage</string>
    <string name="heap_usage_desc">cause a libc abort by abusing a heap</string>
    <string name="call_null">call-null</string>
    <string name="call_null_desc">cause a crash by calling through a nullptr</string>
    <string name="leak">leak</string>
    <string name="leak_desc">leak memory until we get OOM-killed</string>
    <string name="abort">abort</string>
    <string name="abort_desc">call abort()</string>
    <string name="abort_with_msg">abort_with_msg</string>
    <string name="abort_with_msg_desc">call abort() setting an abort message</string>
    <string name="abort_with_null_msg">abort_with_null_msg</string>
    <string name="abort_with_null_msg_desc">call abort() setting a null abort message</string>
    <string name="assert1">assert</string>
    <string name="assert1_desc">call assert() without a function</string>
    <string name="assert2">assert2</string>
    <string name="assert2_desc">call assert() with a function</string>
    <string name="exit">exit</string>
    <string name="exit_desc">call exit(1)</string>
    <string name="fortify">fortify</string>
    <string name="fortify_desc">fail a _FORTIFY_SOURCE check</string>
    <string name="fdsan_file">fdsan_file</string>
    <string name="fdsan_file_desc">close a file descriptor that\'s owned by a FILE*</string>
    <string name="fdsan_dir">fdsan_dir</string>
    <string name="fdsan_dir_desc">close a file descriptor that\'s owned by a DIR*</string>
    <string name="seccomp">seccomp</string>
    <string name="seccomp_desc">fail a seccomp check</string>
    <string name="xom">xom</string>
    <string name="xom_desc">read execute-only memory</string>
    <string name="log_always_fatal">LOG_ALWAYS_FATAL</string>
    <string name="log_always_fatal_desc">call liblog LOG_ALWAYS_FATAL</string>
    <string name="log_always_fatal_if">LOG_ALWAYS_FATAL_IF</string>
    <string name="log_always_fatal_if_desc">call liblog LOG_ALWAYS_FATAL_IF</string>
    <string name="log_fatal">LOG-FATAL</string>
    <string name="log_fatal_desc">call libbase LOG(FATAL)</string>
    <string name="sigfpe">SIGFPE</string>
    <string name="sigfpe_desc">cause a SIGFPE</string>
    <string name="sigill">SIGILL</string>
    <string name="sigill_desc">cause a SIGILL</string>
    <string name="sigsegv">SIGSEGV</string>
    <string name="sigsegv_desc">cause a SIGSEGV at address 0x0 (synonym: crash)</string>
    <string name="sigsegv_non_null">SIGSEGV-non-null</string>
    <string name="sigsegv_non_null_desc">cause a SIGSEGV at a non-zero address</string>
    <string name="sigsegv_unmapped">SIGSEGV-unmapped</string>
    <string name="sigsegv_unmapped_desc">mmap/munmap a region of memory and then attempt to access it</string>
    <string name="sigtrap">SIGTRAP</string>
    <string name="sigtrap_desc">cause a SIGTRAP</string>
    <string name="fprintf_null">fprintf-NULL</string>
    <string name="fprintf_null_desc">pass a null pointer to fprintf</string>
    <string name="readdir_null">readdir-NULL</string>
    <string name="readdir_null_desc">pass a null pointer to readdir</string>
    <string name="strlen_null">strlen-NULL</string>
    <string name="strlen_null_desc">pass a null pointer to strlen</string>
    <string name="pthread_join_null">pthread_join-NULL</string>
    <string name="pthread_join_null_desc">pass a null pointer to pthread_join</string>
    <string name="no_new_privs">no_new_privs</string>
    <string name="no_new_privs_desc">set PR_SET_NO_NEW_PRIVS and then abort</string>

    <string name="delete">Delete</string>
    <string name="select_crash_type">选择Crash类型</string>
    <string name="crash_in_native_thread">Native线程Crash</string>
    <string name="fix_bti_check">修复BTI检查</string>
    <string name="request_notification_permission">申请运行时通知权限</string>
</resources>
