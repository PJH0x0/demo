<?xml version="1.0" encoding="UTF-8"?>
<!--
    The wizard:uris recorded here have the inconvenience of being generated by hand, but they allow
    for the full spread of launch flags (we need FLAG_ACTIVITY_NEW_TASK [0x10000000]), where the
    <intent> tag processed by Intent.parseIntent() does not.

    adb shell am to-intent-uri -a com.android.setupwizard.WELCOME -f 0x10000000 \-\-ez firstRun true
-->

<WizardScript xmlns:wizard="http://schemas.android.com/apk/res/com.google.android.setupwizard"
    wizard:firstAction="prov_profile_checking">

    <!-- Check whether there is provisioning profile activated or not. -->
    <WizardAction id="prov_profile_checking"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.PROV_PROFILE_CHECKING;end">
        <result wizard:name="prov_profile_flow"
            wizard:resultCode="101"
            wizard:action="captive_portal_prov" />
        <result wizard:name="esim_non_prov_profile_flow"
            wizard:resultCode="103"
            wizard:action="network_settings_esim" />
        <result wizard:action="network_settings" />
    </WizardAction>


    <!-- Resolve captive portal access, and wait for check-in [REQUIRED] -->
    <WizardAction id="captive_portal_prov"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.CAPTIVE_PORTAL;end">
        <result wizard:action="gms_checkin_prov" />
    </WizardAction>

    <WizardAction id="gms_checkin_prov"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.GMS_CHECKIN;end">
        <!-- The "timeout" usually happen on poor mobile network, so going to network_settings
            let user setup WiFi connection and re-checkin later. -->
        <result wizard:name="timeout"
            wizard:resultCode="101"
            wizard:action="network_settings" />
        <result wizard:action="esim_setup_prov" />
    </WizardAction>


    <!-- eSIM setup flow [RECOMMENDED] -->
    <WizardAction id="esim_setup_prov"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.ESIM_SETUP;i.setup_type=3;end">
        <result wizard:name="esim_setup_unfinished"
            wizard:resultCode="101"
            wizard:action="network_settings_esim" />
        <result wizard:action="network_settings" />
    </WizardAction>


    <!-- Network selection, Users must be given the opportunity to set up an internet connection,
        using the given screens or a custom flow. -->
    <WizardAction id="network_settings"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.NETWORK_SETTINGS;end">
        <result wizard:name="use_mobile"
            wizard:resultCode="101"
            wizard:action="activate_mobile_data" />
        <result wizard:name="see_all_wifi"
            wizard:resultCode="102"
            wizard:action="wifi_settings" />
        <result wizard:name="skip"
            wizard:resultCode="1" />
        <result wizard:action="captive_portal" />
    </WizardAction>

    <!-- Network selection with eSIM setup, Users must be given the opportunity to set up an
        internet connection, using the given screens or a custom flow. -->
    <WizardAction id="network_settings_esim"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.NETWORK_SETTINGS;B.esim_setup=true;end">
        <result wizard:name="use_mobile"
            wizard:resultCode="101"
            wizard:action="activate_mobile_data" />
        <result wizard:name="see_all_wifi"
            wizard:resultCode="102"
            wizard:action="wifi_settings" />
        <result wizard:name="skip"
            wizard:resultCode="1" />
        <result wizard:action="captive_portal" />
    </WizardAction>

    <!-- Mobile data activation -->
    <WizardAction id="activate_mobile_data"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.ACTIVATE_MOBILE_DATA;end">
        <result wizard:action="captive_portal" />
    </WizardAction>

    <!-- Wi-Fi setup -->
    <WizardAction id="wifi_settings"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.WIFI_SETTINGS;end">
        <result wizard:name="use_mobile"
            wizard:resultCode="101"
            wizard:action="activate_mobile_data" />
        <result wizard:name="skip"
            wizard:resultCode="1" />
        <result wizard:action="captive_portal" />
    </WizardAction>


    <!-- Resolve captive portal access, and wait for check-in [REQUIRED] -->
    <WizardAction id="captive_portal"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.CAPTIVE_PORTAL;end">
        <result wizard:action="gms_checkin" />
    </WizardAction>

    <WizardAction id="gms_checkin"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.GMS_CHECKIN;end">
        <result wizard:name="timeout"
            wizard:resultCode="101"
            wizard:action="network_timeout" />
        <result wizard:action="esim_setup" />
    </WizardAction>


    <!-- Network or check-in timeout [REQUIRED] -->
    <WizardAction id="network_timeout"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.NETWORK_TIMEOUT;end" />

    <!-- eSIM setup flow [RECOMMENDED] -->
    <WizardAction id="esim_setup"
        wizard:uri="intent:#Intent;action=com.android.setupwizard.ESIM_SETUP;i.setup_type=3;end">
        <result wizard:action="ota_update_check" />
    </WizardAction>


    <!-- Update system image check [REQUIRED] -->
    <WizardAction id="ota_update_check"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.OTA_UPDATE_CHECK;end">
        <result wizard:name="skip"
            wizard:resultCode="1"
            wizard:action="early_update" />
        <result wizard:action="ota_update" />
    </WizardAction>

    <!-- Update system image [REQUIRED] -->
    <WizardAction id="ota_update"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.OTA_UPDATE;end">
        <result wizard:name="skip"
            wizard:resultCode="1"
            wizard:action="early_update" />
        <result wizard:action="system_update" />
    </WizardAction>

    <!-- System update should cause a reboot, but if it returns unexpectedly, continue on to
        early update -->
    <WizardAction id="system_update"
        wizard:uri="intent:#Intent;action=android.settings.SYSTEM_UPDATE_SETTINGS;end">
        <result wizard:action="early_update" />
    </WizardAction>


    <!-- Update other important packages [REQUIRED] -->
    <WizardAction id="early_update"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.EARLY_UPDATE;end">
        <result wizard:name="timeout"
            wizard:resultCode="101"
            wizard:action="early_update_network_timeout" />
        <result wizard:action="network_check" />
    </WizardAction>

    <!-- Network or early update timeout [REQUIRED] -->
    <WizardAction id="early_update_network_timeout"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.NETWORK_TIMEOUT;end" />

    <!-- Check network availability and return RESULT_OK or RESULT_SKIP [REQUIRED] -->
    <WizardAction id="network_check"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.NETWORK_CHECK;end">
        <!-- "no_connection" means device doesn't have connection ability at this time, showing
            "Couldn't connect" offers users a path to reconnect to a different network. -->
        <result wizard:name="no_connection"
            wizard:resultCode="1"
            wizard:action="network_unavailable" />
        <!-- All other result codes exit to parent script -->
    </WizardAction>

    <!-- Network unavailable [REQUIRED] -->
    <WizardAction id="network_unavailable"
        wizard:uri="intent:#Intent;action=com.google.android.setupwizard.NETWORK_TIMEOUT;end" />
</WizardScript>
